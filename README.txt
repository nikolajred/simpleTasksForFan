Простая задача №1
Программа считывает двузначное число и выводит через пробел каждую цифру отдельно.

Входные данные
Натуральное число из промежутка от 10 до 99 включительно.

Выходные данные
Два одноцифровых числа, разделенных пробелом.

Простая задача №2
Реализуйте метод, возвращающий true, если среди четырех его аргументов ровно два истинны (любые). Во всех остальных
случаях метод должен возвращать false.

Воспользуйтесь шаблоном кода, который предлагает система. Ввод-вывод будет сделан за вас. Вам надо только
проанализировать переданные в метод booleanExpression значения (a, b, c, d) и вернуть результат. Попробуйте
составить формулу с использованием булевых операторов. Если не получается, вернитесь к этому заданию после
просмотра степов про условные операторы и циклы.

При записи сложных выражений рекомендуется использовать скобки, чтобы не запутаться в порядке применения операторов.

В качестве примера уже указано заведомо некорректное решение задачи. Исправьте его.

Совет тем, у кого не проходит какой-то из тестов. В данной задаче возможно всего 16 комбинаций значений входных
параметров. Их можно выписать на бумажку, посчитать для них правильные ответы и сравнить с тем, что выдает ваше решение.
Попробуйте самостоятельно проделать это, найти ошибку и исправить решение.

Sample Input 1:

false false false false
Sample Output 1:

false
Sample Input 2:

true true true true
Sample Output 2:

false
Sample Input 3:

false false true true
Sample Output 3:

true


public static boolean booleanExpression(boolean a, boolean b, boolean c, boolean d) {
    return  ((a==b)==(c==d)) & (!(a & b & c & d)) & (!(!a & !b & !c & !d));
}

Простая задача №3

Вычислить количество цифр целого неотрицательного числа .

Входные данные
Одно целое неотрицательное число n  (0<=n<=2*10^9).

Выходные данные
Выведите количество цифр в числе n.

Простая задача №4

В Григорианском календаре год является високосным в двух случаях: либо он кратен 4, но при этом не кратен 100, либо кратен 400.

Реализуйте метод, вычисляющий количество високосных лет с начала нашей эры (первого года) до заданного года включительно. На самом деле Григорианский календарь был введен значительно позже, но здесь для упрощения мы распространяем его действие на всю нашу эру.

Ввод-вывод обеспечивает проверяющая система. Вам надо только проанализировать переданное в метод значение и вернуть результат. В программу всегда подается положительный номер года. Предполагается решение без циклов. Вам надо придумать и записать несложную формулу, использующую только арифметические операторы.

В качестве примера написано заведомо неправильное выражение. Исправьте его.
Sample Input 1:

1
Sample Output 1:

0
Sample Input 2:

4
Sample Output 2:

1
Sample Input 3:

100
Sample Output 3:

24

Простая задача №5

Реализуйте метод, проверяющий, является ли заданная строка палиндромом. Палиндромом называется строка, которая читается одинаково слева направо и справа налево (в том числе пустая). При определении "палиндромности" строки должны учитываться только буквы и цифры. А пробелы, знаки препинания, а также регистр символов должны игнорироваться. Гарантируется, что в метод попадают только строки, состоящие из символов ASCII (цифры, латинские буквы, знаки препинания). Т.е. русских, китайских и прочих экзотических символов в строке не будет.

Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит проверяющая система.

Подсказки (не читайте, если хотите решить сами):

для удаления из строки всех символов, не являющихся буквами и цифрами, можно воспользоваться регулярным выражением "[^a-zA-Z0-9]"; найдите в классе String метод, выполняющий замену по регулярному выражению;
для перестановки символов строки в обратном порядке можно воспользоваться методом reverse(), который находится в классе StringBuilder;
в классе String есть методы для преобразования всей строки в верхний и нижний регистр.
Sample Input:

Madam, I'm Adam!
Sample Output:

true

Простая задача №6

Реализуйте метод, вычисляющий факториал заданного натурального числа.

Факториал NN вычисляется как 1 \cdot 2 \cdot ... \cdot N1⋅2⋅...⋅N.

Поскольку это очень быстро растущая функция, то даже для небольших NN вместимости типов int и long очень скоро не хватит.
Поэтому будем использовать BigInteger.

Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит проверяющая
система.

Sample Input 1:

1
Sample Output 1:

1
Sample Input 2:

3
Sample Output 2:

6

